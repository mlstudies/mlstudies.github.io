.. role:: red
.. role:: def
.. role:: exdef
.. role:: emp
.. role:: bemp
.. role:: ititle
.. role:: ititle2
.. role:: conn1
.. role:: conn2
.. role:: conn3
.. role:: uline
.. role:: ibold
.. role:: strike
.. role:: python(code)
   :language: python
.. role:: latex(code)
   :language: latex

.. |list-div| raw:: html

   <ul style="left-margin:20px">

.. |end-list-div| raw:: html

   </ul>

.. |enum-div| raw:: html

   <ol style="left-margin:20px">

.. |end-enum-div| raw:: html

   </ol>

.. |item-div| raw:: html

   <li>

.. |item| raw:: html

   <li>

.. |end-item-div| raw:: html

   </li>

.. |end-item| raw:: html

   </li>

.. |tip| raw:: html

   <span class="tooltip">

.. |tiptxt| raw:: html

   <span class="tooltiptext">

.. |theorem| raw:: html

   <span><span class="theorem-highlight">	

.. |result| raw:: html

   <span><span class="result-highlight">

.. |fact| raw:: html

   <span><span class="fact-highlight">

.. |comment| raw:: html

   <span><span class="comment-highlight">

.. |emperical| raw:: html

   <span><span class="emperical-highlight">

.. |strike| raw:: html

   <span><span class="strike">
   
.. |uline| raw:: html

   <span><span class="uline">
   
.. |ibold| raw:: html

   <span><span class="ibold">
   
.. |bold| raw:: html

   <span><span style="font-weight: bold;">
   
.. |italic| raw:: html

   <span><span style="font-style: italic;">
   
.. |para| raw:: html

   <span style="padding-left:20px"></span>

.. |def| raw:: html

   <span><span class="def">

.. |exdef| raw:: html

   <span><span class="exdef">

.. |hidden-cell| raw:: html

   <div class="hidden_cell" style="display:none">01

.. |indent-div| raw:: html

   <div><div style="text-indent: 20px;">

.. |end-div| raw:: html

   </div></div>

.. |span-center| raw:: html

   <span style="text-align:center;display:block">

.. |span-right| raw:: html

   <span style="text-align:right;display:block">

.. |end-span| raw:: html

   </span></span>
   
.. raw:: html

  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      TeX: { extensions: ["color.js","autoload-all.js"] }
    });

	MathJax.Hub.Register.StartupHook("TeX color Ready", function() {
     var color = MathJax.Extension["TeX/color"];
     color.colors["theorem"] = color.getColor('RGB','255,229,153');
	 color.colors["result"] = color.getColor('RGB','189,214,238');
	 color.colors["fact"] = color.getColor('RGB','255,255,204');
	 color.colors["emperical"] = color.getColor('RGB','253,240,207');
	 color.colors["comment"] = color.getColor('RGB','204,255,204');
     color.colors["thm"] = color.getColor('RGB','255,229,153');
	 color.colors["rlt"] = color.getColor('RGB','189,214,238');
	 color.colors["emp"] = color.getColor('RGB','253,240,207');
	 color.colors["comm"] = color.getColor('RGB','204,255,204');
	 color.colors["conn1"] = color.getColor('RGB','255,0,255');
	 color.colors["conn2"] = color.getColor('RGB','237,125,49');
	 color.colors["conn3"] = color.getColor('RGB','112,48,160');
	});
  </script>


Some Title For First Chapter
=============



|enum-div|


.. raw:: html

   <li value="1">
The dimension of hidden states :math:`\mathbf{h}_{t}` is free to choose, but the dimension of outputs :math:`{\widehat{\mathbf{y}}}_{t}` is designed to be
equal to :math:`\left| L \right|`. Moreover, we can design
:math:`{\widehat{\mathbf{y}}}_{t}` as a discrete probability distribution. All
these designs are for the loss function \-- the well-known
negative-log-likelihood now can be chosen as the loss function \--
taking negative logarithm on the one element of
:math:`{\widehat{\mathbf{y}}}_{t}` indexed by true label :math:`y_{t}`, i.e.

.. math::
 \mathcal{l = -}\sum_{t = 1}^{N}{\log\left( {\widehat{\mathbf{y}}}_{t}\left( y_{t} \right) \right)}


|end-item|


.. raw:: html

   <li value="2">
Now in order for :math:`{\widehat{\mathbf{y}}}_{t} = g\left( \mathbf{h}_{t};ùõå_{t} \right)`
to be a probability distribution vector of dimension equal to the size
of label set, we can let

.. math::
 g\left( \mathbf{h}_{t};ùõå_{t} \right) := \operatorname{softmax}\left( \mathbf{c + W}\left( \text{sigmoid}\left( \mathbf{b}^{\left( g \right)} + \mathbf{U}^{\left( g \right)}\mathbf{h}_{t} + \mathbf{V}^{\left( g \right)}\mathbf{x}_{t} \right) \circ \tanh\left( \mathbf{h}_{t} \right) \right) \right)
where :math:`\mathbf{c \in}\mathbf{R}^{\left| L \right|}` and
:math:`\mathbf{W} \in \mathbb{R}^{\left| L \right| \times \dim\mathbf{h}_{t}}`,
and
:math:`\log\left( \cdot \right),\operatorname{softmax}\left( \cdot \right)`
are applied element-wise if the input is a vector.

|end-item| |end-enum-div|






.. raw:: html

   <table class="docutils" style="background:none; border:none;"><tbody><tr class="row-odd"><td  style="background:none; border:none;">text1</td><td  style="background:none; border:none;">text2</td></tr><tr><td  style="background:none; border:none;">text3</td><td  style="background:none; border:none;">$$cell_01$$</td></tr></tbody></table>


.. raw:: html

   <div class="hidden_cell" style="display: none">$$cell_01$$

.. math::
 \begin{align}
 \left|(T\textbf{x})_i(t)-(T\textbf{y})_i(t)\right| &= \left|\int_a^bG(t,s)\left( f_i(x_1(s),...,x_n(s))-f_i(y_1(s),...,y_n(s)) \right)\operatorname{d}s\right|\\
 & \le \int_a^b\left|G(t,s)\right|K_i \max_{i} \left|  x_i(s)-y_i(s) \right|\operatorname{d}s \\
 & \le K\| \textbf{x}-\textbf{y}\| \int_a^b G(t,s)\operatorname{d}s
 \end{align}




.. raw:: html

   $$end_cell_01$$</div>

For example, if :math:`\Omega = \left\{ 0,1 \right\}`, then
:math:`\left\{ \left\{ 0 \right\},\left\{ 1 \right\},\left\{ 0,1 \right\},\varnothing \right\}` is a ùúé-algebra of :math:`\Omega` and we can define
:math:`\mathbb{P}\left( \left\{ 0 \right\} \right) = 0.3,\mathbb{P}\left( \left\{ 1 \right\} \right) = 0.7,\mathbb{P}\left( \left\{ 0,1 \right\} \right) = 1,\mathbb{P}\left( \varnothing \right) = 0`.

Hello world! Hellow World! This is a final test.

Easy latex! :math:`x,y,z`

An example of |tip| tooltip|tiptxt| tooltip text |end-span|.

* An example of |strike| strike through |end-span|, an example of |strike| mutiline strike
through :math:`x^2-y`  |end-span|, and an example of inline |strike| strike |end-span|.

* An example of |uline| underline |end-span|, an example of |uline| mutiline
underline :math:`\underline{x^2+y}` |end-span| and an example of inline |uline| uline |end-span|.

An test example of |ibold| italic bold |end-span| and |ibold| mutiline italic bold
through |end-span|. You can try for yourself, and an example of inline |ibold| ibold |end-span|.

An example of |bold| bold |end-span|, an example of |bold| mutiline
bold |end-span|, and an example of inline *ibold*.

An example of |italic| italic |end-span|, an example of |italic| mutiline
italic |end-span|, and an example of inline **italic**.

***

* An |strike| example |end-span| of fact highlight |fact| :math:`x` is positive. |end-span| and |fact| multi-line fact
highlight. |end-span|

* An **example** of theorem highlight |theorem| :math:`x` is positive. |end-span| and |theorem| multi-line theorem
statement. |end-span|

* An *example* of result highlight |result| :math:`x` is positive. |end-span| and |result| multi-line result
highlights. |end-span|

* An |uline| example |end-span| of comment highlight |comment| :math:`x` is positive. |end-span| and |comment| multi-line commment
highlight. |end-span|

* An |ibold| example |end-span| of emperical highlight: |emperical| :math:`x` is positive. |end-span| and |emperical| multi-line emperical
highlight |end-span|.

***

First, :conn1:`something` has connection with :conn1:`another thing`.

Again, :conn2:`something` has connection with :conn2:`another thing`.

Again, |bold| :conn3:`something` |end-span| has connection with :conn3:`another thing`.

.. note:: 
 We can use latex \\colorbox to partially highlight a formula, e.g. :math:`\frac{\colorbox{thm}{$\sin(x)$} \times \cos(x)}{\colorbox{rlt}{$x^2+y^2=1$}}`. The following is math block.

 We can use latex \\color to color formula.
 
 .. math::
  \color{red}{x^2}+y^2=3
  :label: round

 The following is an example of combined latex text color and background color.
 
 .. math::
  \left\{ {\begin{array}{*{20}{l}}
  {x =  - \infty ,..., - h,0,h} \\
  \colorbox{comm}{$\color{conn1}{y = h,2h,...,mh}$}
  \end{array}} \right.

 Continue the note after the math block.

Now the note block ends.

An example of using highlight :red:`red` (derivative defined through role).

An example of using highlight for  |def| :index:`definition` |end-span| (derivative defined through role).

An example of using highlight for :emp:`hint`.

An example of inline build-in ``highlight``.

Inline math examples: :math:`\color{blue}{œÉ_{1}}` equals :math:`\colorbox{thm}{œÉ_{2}}` then etc, etc.


.. _property_aa:

:ititle:`Property 1-1.` Some property aa here.


.. _theorem_aa:

:ititle:`Theorem 1-1.` Some theorem aa here.

Math block example:

.. math::
 x^2+y^2=1

Math block example with label:

.. math::
 e^{i\pi} + 1 = 0
 :label: euler

Multi-line math example.

.. math::
 \left\{ {\begin{array}{*{20}{l}}
 {4u(x,y) - u(x - h,y) - u(x + h,y) - u(x,y - h) - u(x,y + h) = 0} \\
 {u(2h,y) = \sqrt {\frac{{m + 1}}{2}} \sin (\frac{{\pi ky}}{L})} \\
 {u(x,0) = u(x,L) = 0}
 \end{array}} \right.

Test again for direct inline latex pre-process extension :math:`\frac{x^2}{a^2}+\frac{y^2}{b^2} = 1`.


.. _property_bb:

:ititle:`Property 1-2.` Some property bb here.


.. _theorem_bb:

:ititle:`Theorem 1-2.` Some theorem bb here.

Level 2 Title
****************


.. _property_cc:

:ititle:`Property 1-3.` Some property cc here.


.. _theorem_cc:

:ititle:`Theorem 1-3.` Some theorem cc here.


Level 3 Title
--------------------------
Here also presents an itemized list.

* Here is a link to :ref:`Property 1-2 <property_bb>`
* This is a link to :ref:`Theorem 1-1 <theorem_aa>`
* This is a link to :eq:`round`.

.. note:: You may also specify inline note

Level 4 Title
~~~~~~~~~~~~~~~~~~~~~~~

An example to display some code.

.. code-block:: python

 from recommonmark.parser import CommonMarkParser
 source_parsers = {
     '.md': CommonMarkParser,
 }
 source_suffix = ['.rst', '.md']


.. include:: subfolder/00_test_1.rst
